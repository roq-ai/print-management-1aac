generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer {
  id                      String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                    String         @db.VarChar(255)
  email                   String         @unique @db.VarChar(255)
  phone                   String         @db.VarChar(255)
  sales_representative_id String         @db.Uuid
  created_at              DateTime       @default(now()) @db.Timestamp(6)
  updated_at              DateTime       @default(now()) @db.Timestamp(6)
  user                    user           @relation(fields: [sales_representative_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_draft            design_draft[]
  enquiry                 enquiry[]
}

model design_draft {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  task_id     String   @db.Uuid
  customer_id String   @db.Uuid
  status      String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  customer    customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task        task     @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model despatch {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id      String   @db.Uuid
  supervisor_id String   @db.Uuid
  status        String   @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  order         order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user     @relation(fields: [supervisor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model enquiry {
  id                      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id             String   @db.Uuid
  sales_representative_id String   @db.Uuid
  status                  String   @db.VarChar(255)
  created_at              DateTime @default(now()) @db.Timestamp(6)
  updated_at              DateTime @default(now()) @db.Timestamp(6)
  customer                customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                    user     @relation(fields: [sales_representative_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order                   order[]
}

model invoice {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id      String   @db.Uuid
  accountant_id String   @db.Uuid
  amount        Int
  status        String   @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user          user     @relation(fields: [accountant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order         order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  enquiry_id String     @db.Uuid
  status     String     @db.VarChar(255)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  despatch   despatch[]
  invoice    invoice[]
  enquiry    enquiry    @relation(fields: [enquiry_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  workflow   workflow[]
}

model press {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model task {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workflow_id  String         @db.Uuid
  assignee_id  String         @db.Uuid
  status       String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  design_draft design_draft[]
  user         user           @relation(fields: [assignee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  workflow     workflow       @relation(fields: [workflow_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  customer    customer[]
  despatch    despatch[]
  enquiry     enquiry[]
  invoice     invoice[]
  press       press[]
  task        task[]
  workflow    workflow[]
}

model workflow {
  id                    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id              String   @db.Uuid
  production_planner_id String   @db.Uuid
  created_at            DateTime @default(now()) @db.Timestamp(6)
  updated_at            DateTime @default(now()) @db.Timestamp(6)
  task                  task[]
  order                 order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                  user     @relation(fields: [production_planner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
